template: http://git.app.eng.bos.redhat.com/git/openshift-misc.git/plain/v3-launch-templates/functionality-testing/aos-35/hosts/hosts.3master_etcd+2infra_node+Nnode


rhel_roles:
- master
- node
- router
- registry
- etcd


iaas_name: AWS
node_number: 2
vm_type: m4.xlarge
image: qe-rhel-733_1
install_update_docker: true
docker_storage_driver: devicemapper
os_update: false
use_rpm_playbook: true
qe_additional_repos: "[{'id': 'aos', 'name': 'Prerelease OCP', 'baseurl': 'https://mirror.openshift.com/enterprise/enterprise-3.5/latest/RH7-RHAOS-3.5/x86_64/os', 'enabled': 1, 'gpgcheck': 0},{'id': 'fast-datapath', 'name': 'fast-datapath', 'baseurl': 'https://mirror.openshift.com/enterprise/rhel/rhel-7-fast-datapath-rpms/', 'enabled': 1, 'gpgcheck': 0}]"
auth_type: allowall
openshift_playbook_rpm_repos: "[{'id': 'aos35-devel-install', 'name': 'aos35-devel-install', 'baseurl': 'http://download.eng.bos.redhat.com/rcm-guest/puddles/RHAOS/AtomicOpenShift-errata/3.5/latest/RH7-RHAOS-3.5/x86_64/os', 'enabled': 1, 'gpgcheck': 0}]"
#os_sdn_network_plugin_name: redhat/openshift-ovs-multitenant
openshift_master_default_subdomain_enable: true
#update_is_images_url: registry.access.redhat.com
enable_cloudprovider: true
aws_elb_enable: true
ec2_security_group_ids: '["sg-5875023f"]'
# https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#LoadBalancers:
# infra_lb_address have to be IP, but not DNS, qe-infra-elb-1351269465.us-east-1.elb.amazonaws.com => 52.5.24.173
# If you want two new ELBs to replace the following existing ones, pls run the following playbook manually to get new vaules and replace the following api_lb_address, infra_lb_address, ,
# ansible-playbook extra-ansible/create_aws_elb.yaml -v -e aws_elb_enable=false -e new_aws_elb=true
api_lb_address: qe-master-api-elb-1628276132.us-east-1.elb.amazonaws.com
infra_lb_address: "52.5.24.173"
#master_elbname: qe-master-api-elb
#infra_elbname:  qe-infra-elb


openshift_ansible_vars:
  deployment_type: openshift-enterprise
  openshift_cockpit_deployer_prefix: registry.ops.openshift.com/openshift3/
  openshift_master_dynamic_provisioning_enabled: true
  #openshift_master_kube_admission_plugin_order: '["NamespaceLifecycle","OriginPodNodeEnvironment","LimitRanger","ServiceAccount","SecurityContextConstraint","BuildDefaults","BuildOverrides","SCCExecRestrictions","AlwaysPullImages"]'
  #openshift_master_kube_admission_plugin_config: '{"RunOnceDuration":{"configuration":{"apiVersion":"v1","kind":"RunOnceDurationConfig","activeDeadlineSecondsOverride":"3600"}},"ClusterResourceOverride":{"configuration":{"apiVersion":"v1","kind":"ClusterResourceOverrideConfig","limitCPUToMemoryPercent":"200","cpuRequestToLimitPercent":"6","memoryRequestToLimitPercent":"60"}},"PodNodeConstraints":{"configuration":{"apiVersion":"v1","kind":"PodNodeConstraintsConfig"}},"BuildOverrides":{"configuration":{"apiVersion":"v1","kind":"BuildOverridesConfig","forcePull":True}}}'
  oreg_url: registry.ops.openshift.com/openshift3/ose-${component}:${version}
  openshift_docker_additional_registries: registry.ops.openshift.com
  openshift_docker_insecure_registries: brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888,virt-openshift-05.lab.eng.nay.redhat.com:5000,virt-openshift-05.lab.eng.nay.redhat.com:5001,registry.ops.openshift.com
  openshift_docker_blocked_registries: registry.hacker.com
  osm_use_cockpit: false
  osm_cockpit_plugins: "['cockpit-kubernetes']"
  osm_cluster_network_cidr: '10.2.0.0/16'
  openshift_master_portal_net: '172.31.0.0/16'
  openshift_node_kubelet_args: '{"enable-controller-attach-detach": ["true"], "pods-per-core": ["0"], "minimum-container-ttl-duration": ["10s"], "maximum-dead-containers-per-container": ["1"], "maximum-dead-containers": ["20"], "image-gc-high-threshold": ["80"], "image-gc-low-threshold": ["70"]}'
  osm_controller_lease_ttl: 10
  openshift_master_console_port: 443
  openshift_master_api_port: 443
  osm_default_node_selector: 'role=node,region=primary'
  openshift_hosted_registry_selector: '"role=node,registry=enabled"'
  openshift_hosted_registry_replicas: 2
  openshift_hosted_router_selector: '"role=node,router=enabled"'
  openshift_hosted_router_replicas: 2
  openshift_hosted_router_registryurl: 'registry.ops.openshift.com/openshift3/ose-${component}:${version}'
  debug_level: 5
  openshift_set_hostname: true
  openshift_override_hostname_check: true

  openshift_hosted_registry_storage_kind: object
  openshift_hosted_registry_storage_provider: s3
  openshift_hosted_registry_storage_s3_accesskey: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
  openshift_hosted_registry_storage_s3_secretkey: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
  openshift_hosted_registry_storage_s3_bucket: openshift-qe-registry-testing-bucket1
  openshift_hosted_registry_storage_s3_region: us-east-1
  #openshift_hosted_registry_storage_s3_cloudfront_baseurl: https://d2opkj68u8rx5e.cloudfront.net/
  #openshift_hosted_registry_storage_s3_cloudfront_privatekeyfile: /etc/s3-cloudfront/cloudfront.pem
  #openshift_hosted_registry_storage_s3_cloudfront_keypairid: APKAIDFMKTU2GD763NOA

  #openshift_master_named_certificates: '[{"certfile": "{{ lookup(\"env\", \"WORKSPACE\") }}/private-openshift-misc/v3-launch-templates/functionality-testing/aos-35/extra-ansible/files/qe-master-api-elb.crt", "keyfile": "{{ lookup(\"env\", \"WORKSPACE\") }}/private-openshift-misc/v3-launch-templates/functionality-testing/aos-35/extra-ansible/files/qe-master-api-elb.key", "cafile": "{{ lookup(\"env\", \"WORKSPACE\") }}/private-openshift-misc/v3-launch-templates/functionality-testing/aos-35/extra-ansible/files/qe-master-api-elb-ca.crt"}]'
